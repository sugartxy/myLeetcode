/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    int ans;
    public int longestUnivaluePath(TreeNode root) {
        ans = 0;
        dfs(root);
        return ans;
    }
    private int dfs(TreeNode root){
        //base case
        if(root==null){
            return 0;
        }
        //recursive
        int left = dfs(root.left);
        int right = dfs(root.right);
        int curLeft =0;
        int curRight = 0;
        if(root.left!=null && root.left.val == root.val){
            curLeft = left+1;
        }
        if(root.right!=null && root.right.val == root.val){
            curRight = right+1;
        }
        ans = Math.max(ans, curLeft+curRight);
        return Math.max(curLeft, curRight);
    }
    
}
